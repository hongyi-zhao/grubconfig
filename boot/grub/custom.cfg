#根据实际的测试，下面方法是可以的，实现了从硬盘安装debian：
# 1- 在使用这个方法的时候，不能在安装中挂载安装镜像 iso 所在的分区。
# 安装盘iso镜像放到了hd0的最后一个分区上。注意这个不能是链接。
#
# 2- 考虑到使用的方便性，在这个文件中直接挂载相应的 /hd-media/ 下面的文件，可以是链接位置。
#  比如我这里所用的 current 文件夹实际是一个链接。
#[按照目前的rdmirror.sh中的实现方法，current 文件夹已经不再是链接了]
# 
#
# 3- 将这个文件copy到 /boot/grub/ ，就可以被 /boot/grub/grub.cfg 加载了。
# 4- for debian oldstable, i.e., squeeze, the ext4 filesystem isn't recongnized by 
# it's hd-media boot files.  So use the last part of hd0 formatted to ext3 to store the dvd iso files.
# based on the above description, all of the dvd iso's used for installation, are now stored in the last part of hd0.
# 5- 但是，进一步的尝试发现，jessie版本的iso在ext3上不能被找到。而且squeeze确实不好用。故将hd0最后一个小分区格式化为ext4，
# 用来存放相应的iso文件。
# 6- 目前的 debian multiarch似乎也是在实验阶段，常常遇到包安装的冲突问题。看使用单纯的i386版本如何。
# 进一步的分析表明，实际上我所遇到的libssl-dev, python-dev 安装时由于包冲突而无法进行的问题，实际上是由于我使用了部分的包仓库。
# 按照后来的分析，加入了stable版本的库的各个部分。这些问题解决了。
# 
# [上面所说的libssl-dev, python-dev 安装时由于包冲突而无法进行的问题，实际上是由于我混乱使用包仓库所导致的。]
# ref: werner@debian:~/software/LocalRepo/当前的repo设定$ ls \[used-for-now\]关于应该如何设定软件库的再思考
# [used-for-now]关于应该如何设定软件库的再思考
#
# 7- desktop=gnome 是用来选择默认安装的桌面环境是gnome。
# 8- 实际上，这个配置文件的编写是从 iso 镜像以及本地debian系统的中的下面这个文件：
# /boot/grub/grub.cfg
# 中的相关写法，参考修改而来。

# instructions for installation:
#
# 9- ref: 
# https://www.debian.org/devel/debian-installer/
#
#
# Installation Guide: version for current release
# detailed installation instructions
#
# https://www.debian.org/releases/stable/installmanual
# https://www.debian.org/releases/stable/amd64/
#
# latest version (Subversion)
# http://d-i.debian.org/manual/
# http://d-i.debian.org/manual/en.amd64/
# http://d-i.debian.org/manual/zh_CN.amd64/

# expecially here, can find some hints for my case:
# http://d-i.debian.org/manual/en.amd64/ch05s01.html#boot-initrd

# 10- When use multiple Debian install os images under the top level of the partition,
# first change the surffix ( let the suffix not iso ) or put the iso under some sub-dir which is not used for installation. 

# Say, for install testing ( it seems this step for testing installation is not needed ):

# Firstly, rename the debian-8.7.1-amd64-DVD-1.iso to debian-8.7.1-amd64-DVD-1.iso.not-scan 

# for install stable:

# Firstly, rename the debian-testing-amd64-DVD-1.iso to debian-testing-amd64-DVD-1.iso.not-scan 



# 11- install the latest grub:

# 安装最新版本的grub2：
# https://ftp.gnu.org/gnu/grub/
# sudo apt-get build-dep grub2
# ./configure 
# make -j24
# sudo make install
# sudo grub-install /dev/sda
# sudo update-grub


# 12-
# 使用regexp模块：
# https://www.rmprepusb.com/tutorials/grub2_tutorial137
# 一些摘录：
# Scripting
# Loosely follows bash shell
# Useful functions and notes regular expressions

# function pathname { regexp -s 2:"$2" '^(\(.*\))?(/.*)$' "$1"; } # /_ISO/ubuntu 64.iso
# function devname { regexp -s "$2" '^(\(.*\)).*$' "$1"; } # (hd0,msdos2)
# function pathonly { regexp -s 2:"$2" '^(\(.*\))?(.*/)*' "$1"; } # /_ISO/
# function getext { regexp -s 3:"$2" '^(.*/)*(.*)\.(.*)$' "$1"; } # iso
# function getfname { regexp -s 2:"$2" '(.*)/+(.*)' "$1"; } # ubuntu 64.iso
# function gethdnum { regexp -s 2:"$2" '^(.*)hd(.*),' "$1"; } # 0
# function getdev { regexp -s 2:"$2" '^(.*)\((.*),' "$1"; } # hd0


# usage where $file = (hd0,msdos1)/_ISO/DIR/some file name with spaces.iso
# # set isopath to the fullpath without device name

# pathname "$file" isopath # make sure double-quotes around $file - this sets the isopath variable to /_ISO/DIR/some file name with spaces.iso

# 2: = get second match value, 3: = 3rd matched value
# ^ = start at beginning
# $ = up to end of line

# If looking for ( or ) then must precede with \

# (\(.*\))? = look for ( then anything then ) ? is zero or more of preceding match which is enclosed in ( )
# (/.*)$ = look for / followed by any chars up to end of line

# (.+/)* = look for 1 or more chars up to / any number of times
# (*+)\. = look for 0 or more chars followed by .
# (.+)$ = look for all chars till end of line


# e.g. regexp -s 2:"$2" '^(.*)\((.*),'

# ^ = start at beginning of line, look for any number of chars (.*), look for open parenthesis (, look for any number chars (.*), look for comma , - return 2nd match in parentheses as $2.


# testing regexp from the grub2 command line

# unset fred ; regexp -s 2:"fred" 'test regexp here' "$file" ; echo $fred
# # if filename does not contain ubuntu then abort
# if ! regexp '(.*)[uU][bB][uU][nN][tT][uU]' "$myfname" ; then continue ; fi
 

# https://lists.gnu.org/archive/html/grub-devel/2016-09/msg00018.html
# 下面这个文件中也有许多高级的用法：
# /media/werner/7ac9245c-3441-4dc2-a6e8-2267bea3c29f/grub/grub.git/docs/autoiso.cfg


# 13- probe
#https://www.gnu.org/software/grub/manual/grub/grub.html

#https://askubuntu.com/questions/228031/how-do-you-get-a-uuid-from-a-a-device-on-the-grub2-prompt

#Programmatically, this can be queried with the probe command, e.g.:

#probe --fs-uuid (hd0,gpt6)

#The result can also be assigned to a variable with --set:

#probe --set devuuid --fs-uuid (hd0,gpt6)
#echo $devuuid


#http://www.jinbuguo.com/linux/grub.cfg.html
#probe [--set var] --driver|--partmap|--fs|--fs-uuid|--label device
#    提取"device"设备的特定信息。如果使用了 --set 选项，则表示将提取的结果保存在"var"变量中，否则将提取的结果直接显示出来。



# 14 source / configfile
#configfile file

#    将"file"作为配置文件加载。如果"file"中定义了菜单项，那么立即显示一个包含它们的菜单。

#    [注意]"file"文件对环境变量所做的任何变更都将在从此文件返回后失效。

#source file

#    直接将"file"文件的内容插入到当前位置。与"configfile"不同，此命令既不切换执行环境，也不会显示一个新的菜单。


menuentry 'Installing debian stable amd64 from hd-media' {
	load_video
	insmod gzio
        insmod part_msdos
	insmod part_gpt
	insmod ext2
	insmod regexp
     for file in (*)/mirrors.tuna.tsinghua.edu.cn/debian/dists/stable/main/installer-amd64/current/images/hd-media/gtk/*; do
        if test -f "$file"; then
          regexp -s 1:devname -s 2:pathname -s 3:filename '^(\(.*\))(.*/)([^/]+)$' "$file"
          if [ $filename = "vmlinuz" ]; then
             vmlinuzfile=$devname$pathname$filename
           elif [ $filename = "initrd.gz" ]; then
             initrdfile=$devname$pathname$filename
           else
             continue 
          fi 

        fi
    done 

     if [ -n "$vmlinuzfile" -a -n "$initrdfile" ]; then
        # echo $vmlinuzfile
        # echo $initrdfile
        # sleep 10
        linux	$vmlinuzfile vga=788
        initrd $initrdfile
        boot
     fi   
}


#menuentry "Running debian-cd current-live amd64 from hd-media" {
#	load_video
#	insmod gzio
#	insmod part_msdos
#	insmod part_gpt
#	insmod ext2
#	insmod regexp
#       insmod loopback
#       insmod iso9660

#    # 参考 debian-live-*-amd64-gnome.iso 中提供的 grub.cfg, 和下面的cfg 中的用法：
#    # /media/werner/7ac9245c-3441-4dc2-a6e8-2267bea3c29f/grub/grub.git/docs/autoiso.cfg
#    for file in (*)/mirrors.tuna.tsinghua.edu.cn/debian-cd/current-live/amd64/iso-hybrid/debian-live-*-amd64-gnome.iso; do
#        if test -f "$file"; then
#          regexp -s 1:rootdev -s 2:isopath '^(\(.*\))(/.*)$' "$file"
#          isofile=$rootdev$isopath
#        fi
#    done
#   
#   # http://forums.debian.net/viewtopic.php?f=17&t=121092  

##  see the following for very good examples:   
##   http://www.jinbuguo.com/linux/grub.cfg.html

## the following is taken from above website:

##https://mirrors.ustc.edu.cn/debian-cd/current-live/amd64/iso-hybrid/
##也适用于'Kali LiveCD [root/toor]'( username=root hostname=kali ) https://cdimage.kali.org/current/
##if [ -f $prefix/linux/debian-live-gnome.iso ] ; then
##    menuentry 'Debian 10.1 GNOME LiveCD (NO SSH)' --unrestricted {
##        loopback loop0 $prefix/linux/debian-live-gnome.iso
##        linux  (loop0)/live/vmlinuz-4.19.0-6-amd64 boot=live findiso=/grub/linux/debian-live-gnome.iso   components locales=zh_CN.UTF-8
##        initrd (loop0)/live/initrd.img-4.19.0-6-amd64
##    }
##fi

#   if [ -n "$isofile" ]; then
#      # 下面这行用不用都可以：
#      # set root=$rootdev
#      loopback loop $isofile
#      regexp -s vmlinuzfile '^(.*)$' (loop)/live/vmlinuz-*-amd64
#      regexp -s initrdfile '^(.*)$' (loop)/live/initrd.img-*-amd64
#      linux  $vmlinuzfile boot=live components findiso=$isopath noeject
#      initrd $initrdfile 

#  fi
#}

#ref: https://clonezilla.org/livehd.php

menuentry "clonezilla-live" {

	load_video
	insmod gzio
	insmod part_msdos
	insmod part_gpt
	insmod ext2
	insmod regexp
        insmod loopback
        insmod iso9660

     for file in (*)/sysadmin/clonezilla/clonezilla-live/*.iso; do
        if test -f "$file"; then
          regexp -s 1:devname -s 2:pathname -s 3:filename '^(\(.*\))(.*/)([^/]+)$' "$file"
          regexp -s version '^clonezilla-live-[0-9.-]+(.*)$' $filename
          if [ $version = "amd64.iso" ]; then
             amd64_iso=$devname$pathname$filename
           elif [ $version = "disco-amd64.iso" ]; then
             disco_amd64_iso=$devname$pathname$filename
           elif [ $version = "eoan-amd64.iso" ]; then
             eoan_amd64_iso=$devname$pathname$filename            
           else
             continue 
          fi 

        fi
    done

#myroot="/dev/sda2"
#ISO="/clonezilla-live-2.6.3-7-amd64.iso"
#search --set -f $ISO
#loopback loop $ISO
loopback loop $amd64_iso

#linux (loop)/live/vmlinuz root=$devname boot=live union=overlay username=user config components quiet noswap edd=on nomodeset locales= keyboard-layouts= ocs_live_run="ocs-live-general" ocs_live_extra_param="" ocs_live_batch="no" vga=791 ip= net.ifnames=0 splash i915.blacklist=yes radeonhd.blacklist=yes nouveau.blacklist=yes vmwgfx.enable_fbdev=1
#initrd (loop)/live/initrd.img

#  search --set -f /live/vmlinuz
  linux (loop)/live/vmlinuz boot=live union=overlay username=user config components quiet noswap edd=on nomodeset enforcing=0 locales= keyboard-layouts= ocs_live_run="ocs-live-general" ocs_live_extra_param="" ocs_live_batch="no" vga=788 ip= net.ifnames=0  splash i915.blacklist=yes radeonhd.blacklist=yes nouveau.blacklist=yes vmwgfx.enable_fbdev=1
  initrd (loop)/live/initrd.img


}







