# 观察到的 grub-install 内部会这样调用：

# 分别使用 /usr/sbin/grub-install ， /usr/local/sbin/grub-install 进行 efi安装，加上 -v , 搜索 log。即可。

# grub-mkimage --directory '/usr/local/lib/grub/x86_64-efi' --prefix '(,gpt3)/grubconfig.git/boot/grub' --output '/mnt/sda3/grubconfig.git/boot/grub/x86_64-efi/core.efi'  --dtb '' --format 'x86_64-efi' --compression 'auto'  'ext2' 'part_gpt'

# or

# 我又加了  fat part_msdos 等模块。

# sudo /usr/bin/grub-mkimage --directory '/usr/lib/grub/x86_64-efi' --prefix '/grubconfig.git/boot/grub' --output '/mnt/sda3/grubconfig.git/boot/grub/x86_64-efi/core.efi' --format 'x86_64-efi' --compression 'auto'  --config '/mnt/sda3/grubconfig.git/boot/grub/x86_64-efi/load.cfg' fat part_msdos 'ext2' 'part_gpt' 'search_fs_uuid' configfile

# sudo grub-mkimage -c grub-mkimage.cfg -o grub-mkimage-x86_64.efi  -O x86_64-efi -p ''  fat part_msdos part_gpt ext2 search_fs_uuid configfile

# sudo blkid -o list | grep /dev/sda3 | awk '{ print $NF}'
# e3e084db-7f7f-47cb-866b-743b7c5758ec

# search.fs_uuid e3e084db-7f7f-47cb-866b-743b7c5758ec root 

   # 基于 --hint 参数，会优先寻找相应设备，但是，如果 --hint的设备没有相关匹配，而其他设备有，
   # 则 会 将 rootdev 设为 其他设备 的值。因此，不是我所需要的结果。
   #search --set rootdev --label 'Debian 10.1.0 amd64 1' --no-floppy --hint hd0,
   
#    
#  https://www.gnu.org/software/grub/manual/grub/grub.html#search  
#    16.3.65 search
# 
# Command: search [--file|--label|--fs-uuid] [--set [var]] [--no-floppy] name
# 
#     Search devices by file (-f, --file), filesystem label (-l, --label), or filesystem UUID (-u, --fs-uuid).
# 
#     If the --set option is used, the first device found is set as the value of environment variable var. The default variable is ‘root’.
# 
#     The --no-floppy option prevents searching floppy devices, which can be slow.
# 
#     The ‘search.file’, ‘search.fs_label’, and ‘search.fs_uuid’ commands are aliases for ‘search --file’, ‘search --label’, and ‘search --fs-uuid’ respectively. 

# 另外的参考，写的非常详细：
#    https://source.puri.sm/pureos/core/grub2/blob/master/debian/build-efi-images#L64

   
search --set root --file '/grubconfig.git/boot/grub/grub.cfg' --no-floppy --hint hd0,
set prefix=($root)/grubconfig.git/boot/grub
configfile $prefix/grub.cfg
 
 
   
   
   

# 基于 grub-mkimage 的方法:
# 
# ref：
# https://www.ibm.com/developerworks/community/blogs/5144904d-5d75-45ed-9d2b-cf1754ee936a/entry/uefi-grub2?lang=en
# 
#  需要注意如下几点：
# 
# 1) 模块是按照一定顺序排列的。如果打破默认序列，EFI文件不可用。  （但是，我下面的方法用了所有的模块，也可以启动，没有按照特定的顺序。）
# 
# 2) fat必须被添加到EFI文件中，用以从FAT文件系统中寻找后续启动文件。
# 
# 3) grub2-mkstandalone是grub2-mkimage功能的延伸，可以增加任何文件，甚至文件夹到EFI文件中，具体细节可参考grub2-mkstandalone -h。

# 由于上面的原因，基于 grub-mkimage 的方法，似乎不太容易运行比较复杂一些的初始脚本，比如下面的：

# for file in (hd0,*)/grubconfig.git/boot/grub; do
#   regexp -s 1:rootdev -s 2:pathname '^(\(.*\))(.*)$' "$file"
#   set root=$rootdev
#   set prefix=($root)$pathname
#   #如果下面的命令是最后一条语句，是可以省略的：
#   configfile $prefix/grub.cfg
#   break
# done















